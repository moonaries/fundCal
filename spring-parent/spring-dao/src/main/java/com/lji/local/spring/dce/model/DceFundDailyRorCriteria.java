package com.lji.local.spring.dce.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DceFundDailyRorCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public DceFundDailyRorCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andDateRorIsNull() {
            addCriterion("date_ror is null");
            return (Criteria) this;
        }

        public Criteria andDateRorIsNotNull() {
            addCriterion("date_ror is not null");
            return (Criteria) this;
        }

        public Criteria andDateRorEqualTo(Date value) {
            addCriterionForJDBCDate("date_ror =", value, "dateRor");
            return (Criteria) this;
        }

        public Criteria andDateRorNotEqualTo(Date value) {
            addCriterionForJDBCDate("date_ror <>", value, "dateRor");
            return (Criteria) this;
        }

        public Criteria andDateRorGreaterThan(Date value) {
            addCriterionForJDBCDate("date_ror >", value, "dateRor");
            return (Criteria) this;
        }

        public Criteria andDateRorGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date_ror >=", value, "dateRor");
            return (Criteria) this;
        }

        public Criteria andDateRorLessThan(Date value) {
            addCriterionForJDBCDate("date_ror <", value, "dateRor");
            return (Criteria) this;
        }

        public Criteria andDateRorLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date_ror <=", value, "dateRor");
            return (Criteria) this;
        }

        public Criteria andDateRorIn(List<Date> values) {
            addCriterionForJDBCDate("date_ror in", values, "dateRor");
            return (Criteria) this;
        }

        public Criteria andDateRorNotIn(List<Date> values) {
            addCriterionForJDBCDate("date_ror not in", values, "dateRor");
            return (Criteria) this;
        }

        public Criteria andDateRorBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date_ror between", value1, value2, "dateRor");
            return (Criteria) this;
        }

        public Criteria andDateRorNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date_ror not between", value1, value2, "dateRor");
            return (Criteria) this;
        }

        public Criteria andFundIdIsNull() {
            addCriterion("fund_id is null");
            return (Criteria) this;
        }

        public Criteria andFundIdIsNotNull() {
            addCriterion("fund_id is not null");
            return (Criteria) this;
        }

        public Criteria andFundIdEqualTo(String value) {
            addCriterion("fund_id =", value, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdNotEqualTo(String value) {
            addCriterion("fund_id <>", value, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdGreaterThan(String value) {
            addCriterion("fund_id >", value, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdGreaterThanOrEqualTo(String value) {
            addCriterion("fund_id >=", value, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdLessThan(String value) {
            addCriterion("fund_id <", value, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdLessThanOrEqualTo(String value) {
            addCriterion("fund_id <=", value, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdLike(String value) {
            addCriterion("fund_id like", value, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdNotLike(String value) {
            addCriterion("fund_id not like", value, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdIn(List<String> values) {
            addCriterion("fund_id in", values, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdNotIn(List<String> values) {
            addCriterion("fund_id not in", values, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdBetween(String value1, String value2) {
            addCriterion("fund_id between", value1, value2, "fundId");
            return (Criteria) this;
        }

        public Criteria andFundIdNotBetween(String value1, String value2) {
            addCriterion("fund_id not between", value1, value2, "fundId");
            return (Criteria) this;
        }

        public Criteria andValueRorIsNull() {
            addCriterion("value_ror is null");
            return (Criteria) this;
        }

        public Criteria andValueRorIsNotNull() {
            addCriterion("value_ror is not null");
            return (Criteria) this;
        }

        public Criteria andValueRorEqualTo(BigDecimal value) {
            addCriterion("value_ror =", value, "valueRor");
            return (Criteria) this;
        }

        public Criteria andValueRorNotEqualTo(BigDecimal value) {
            addCriterion("value_ror <>", value, "valueRor");
            return (Criteria) this;
        }

        public Criteria andValueRorGreaterThan(BigDecimal value) {
            addCriterion("value_ror >", value, "valueRor");
            return (Criteria) this;
        }

        public Criteria andValueRorGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("value_ror >=", value, "valueRor");
            return (Criteria) this;
        }

        public Criteria andValueRorLessThan(BigDecimal value) {
            addCriterion("value_ror <", value, "valueRor");
            return (Criteria) this;
        }

        public Criteria andValueRorLessThanOrEqualTo(BigDecimal value) {
            addCriterion("value_ror <=", value, "valueRor");
            return (Criteria) this;
        }

        public Criteria andValueRorIn(List<BigDecimal> values) {
            addCriterion("value_ror in", values, "valueRor");
            return (Criteria) this;
        }

        public Criteria andValueRorNotIn(List<BigDecimal> values) {
            addCriterion("value_ror not in", values, "valueRor");
            return (Criteria) this;
        }

        public Criteria andValueRorBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("value_ror between", value1, value2, "valueRor");
            return (Criteria) this;
        }

        public Criteria andValueRorNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("value_ror not between", value1, value2, "valueRor");
            return (Criteria) this;
        }

        public Criteria andDividendIsNull() {
            addCriterion("dividend is null");
            return (Criteria) this;
        }

        public Criteria andDividendIsNotNull() {
            addCriterion("dividend is not null");
            return (Criteria) this;
        }

        public Criteria andDividendEqualTo(BigDecimal value) {
            addCriterion("dividend =", value, "dividend");
            return (Criteria) this;
        }

        public Criteria andDividendNotEqualTo(BigDecimal value) {
            addCriterion("dividend <>", value, "dividend");
            return (Criteria) this;
        }

        public Criteria andDividendGreaterThan(BigDecimal value) {
            addCriterion("dividend >", value, "dividend");
            return (Criteria) this;
        }

        public Criteria andDividendGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("dividend >=", value, "dividend");
            return (Criteria) this;
        }

        public Criteria andDividendLessThan(BigDecimal value) {
            addCriterion("dividend <", value, "dividend");
            return (Criteria) this;
        }

        public Criteria andDividendLessThanOrEqualTo(BigDecimal value) {
            addCriterion("dividend <=", value, "dividend");
            return (Criteria) this;
        }

        public Criteria andDividendIn(List<BigDecimal> values) {
            addCriterion("dividend in", values, "dividend");
            return (Criteria) this;
        }

        public Criteria andDividendNotIn(List<BigDecimal> values) {
            addCriterion("dividend not in", values, "dividend");
            return (Criteria) this;
        }

        public Criteria andDividendBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("dividend between", value1, value2, "dividend");
            return (Criteria) this;
        }

        public Criteria andDividendNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("dividend not between", value1, value2, "dividend");
            return (Criteria) this;
        }

        public Criteria andSplitRatioIsNull() {
            addCriterion("split_ratio is null");
            return (Criteria) this;
        }

        public Criteria andSplitRatioIsNotNull() {
            addCriterion("split_ratio is not null");
            return (Criteria) this;
        }

        public Criteria andSplitRatioEqualTo(BigDecimal value) {
            addCriterion("split_ratio =", value, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andSplitRatioNotEqualTo(BigDecimal value) {
            addCriterion("split_ratio <>", value, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andSplitRatioGreaterThan(BigDecimal value) {
            addCriterion("split_ratio >", value, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andSplitRatioGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("split_ratio >=", value, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andSplitRatioLessThan(BigDecimal value) {
            addCriterion("split_ratio <", value, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andSplitRatioLessThanOrEqualTo(BigDecimal value) {
            addCriterion("split_ratio <=", value, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andSplitRatioIn(List<BigDecimal> values) {
            addCriterion("split_ratio in", values, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andSplitRatioNotIn(List<BigDecimal> values) {
            addCriterion("split_ratio not in", values, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andSplitRatioBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("split_ratio between", value1, value2, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andSplitRatioNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("split_ratio not between", value1, value2, "splitRatio");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousIsNull() {
            addCriterion("isSuspicious is null");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousIsNotNull() {
            addCriterion("isSuspicious is not null");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousEqualTo(Integer value) {
            addCriterion("isSuspicious =", value, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousNotEqualTo(Integer value) {
            addCriterion("isSuspicious <>", value, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousGreaterThan(Integer value) {
            addCriterion("isSuspicious >", value, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousGreaterThanOrEqualTo(Integer value) {
            addCriterion("isSuspicious >=", value, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousLessThan(Integer value) {
            addCriterion("isSuspicious <", value, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousLessThanOrEqualTo(Integer value) {
            addCriterion("isSuspicious <=", value, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousIn(List<Integer> values) {
            addCriterion("isSuspicious in", values, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousNotIn(List<Integer> values) {
            addCriterion("isSuspicious not in", values, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousBetween(Integer value1, Integer value2) {
            addCriterion("isSuspicious between", value1, value2, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andIssuspiciousNotBetween(Integer value1, Integer value2) {
            addCriterion("isSuspicious not between", value1, value2, "issuspicious");
            return (Criteria) this;
        }

        public Criteria andFundIdLikeInsensitive(String value) {
            addCriterion("upper(fund_id) like", value.toUpperCase(), "fundId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ism_fund_daily_ror
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}